syntax = "proto3";
import "google/api/annotations.proto";

package notifications.v1alpha1;

import "google/protobuf/struct.proto";

message ScheduledNotification {
  google.protobuf.Struct notification = 1;
  int64 expire_after = 2;
  oneof trigger {
    ExecuteOnceTrigger execute_once_trigger = 3;
    CronTrigger cron_trigger = 4;
  }
}

message ExecuteOnceTrigger {
  string fire_at = 1;
}

message CronTrigger {
  string expression = 1;
}

message NotificationsServiceUpsertUsersRequest {
  repeated google.protobuf.Struct users = 1;
}

message NotificationsServiceUpsertUsersResponse {
  repeated google.protobuf.Struct users = 1;
}

message NotificationsServiceGetUsersRequest {
  repeated string ids = 1;
}

message NotificationsServiceGetUsersResponse {
  repeated google.protobuf.Struct users = 1;
}

message NotificationsServiceListUsersRequest {
  int32 limit = 1;
  int32 skip = 2;
}

message NotificationsServiceListUsersResponse {
  repeated google.protobuf.Struct users = 1;
}

message NotificationsServiceDeleteUsersRequest {
  repeated string ids = 1;
}

message NotificationsServiceDeleteUsersResponse {
  bool success = 1;
}

message NotificationsServiceGetNotificationsRequest {
  string user_id = 1;
  repeated string channels = 2;
  string query = 3;
  int32 limit = 4;
  int32 skip = 5;
}

message NotificationsServiceGetNotificationsResponse {
  int32 total = 1;
  repeated google.protobuf.Struct notifications = 2;
}

message NotificationsServiceSendNotificationsRequest {
  repeated google.protobuf.Struct notifications = 1;
}

message NotificationsServiceSendNotificationsResponse {
  bool success = 1;
}

message NotificationsServiceUpdateSubscriptionsRequest {
  string user_id = 1;
  repeated google.protobuf.Struct subscribe = 2;
  repeated string unsubscribe = 3;
}

message NotificationsServiceUpdateSubscriptionsResponse {
  bool success = 1;
}

message NotificationsServiceScheduleNotificationsRequest {
  repeated ScheduledNotification notifications = 1;
}

message NotificationsServiceScheduleNotificationsResponse {
  bool success = 1;
}

service NotificationsService {
  rpc UpsertUsers(NotificationsServiceUpsertUsersRequest) returns (NotificationsServiceUpsertUsersResponse) {
    option (google.api.http) = {
      put: "/v1/users"
    };
  };
  rpc GetUsers(NotificationsServiceGetUsersRequest) returns (NotificationsServiceGetUsersResponse) {
    option (google.api.http) = {
      get: "/v1/users"
    };
  };
  rpc ListUsers(NotificationsServiceListUsersRequest) returns (NotificationsServiceListUsersResponse) {
    option (google.api.http) = {
      get: "/v1/users/list"
    };
  };
  rpc DeleteUsers(NotificationsServiceDeleteUsersRequest) returns (NotificationsServiceDeleteUsersResponse) {
    option (google.api.http) = {
      delete: "/v1/users"
    };
  };
  rpc GetNotifications(NotificationsServiceGetNotificationsRequest) returns (NotificationsServiceGetNotificationsResponse) {
    option (google.api.http) = {
      get: "/v1/notifications"
    };
  };
  rpc SendNotifications(NotificationsServiceSendNotificationsRequest) returns (NotificationsServiceSendNotificationsResponse) {
    option (google.api.http) = {
      post: "/v1/notifications"
    };
  };
  rpc UpdateSubscriptions(NotificationsServiceUpdateSubscriptionsRequest) returns (NotificationsServiceUpdateSubscriptionsResponse) {
    option (google.api.http) = {
      put: "/v1/subscriptions"
    };
  };
  rpc ScheduleNotifications(NotificationsServiceScheduleNotificationsRequest) returns (NotificationsServiceScheduleNotificationsResponse) {
    option (google.api.http) = {
      post: "/v1/notifications/schedule"
    };
  };
}