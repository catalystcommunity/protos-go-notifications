// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: notifications/v1alpha1/api.proto

package notificationsv1alpha1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ScheduledNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId       string             `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Notification *NotificationEvent `protobuf:"bytes,3,opt,name=notification,proto3" json:"notification,omitempty"`
	ExpireAfter  int64              `protobuf:"varint,4,opt,name=expire_after,json=expireAfter,proto3" json:"expire_after,omitempty"`
	// Types that are assignable to Trigger:
	//	*ScheduledNotification_ExecuteOnceTrigger
	//	*ScheduledNotification_CronTrigger
	Trigger isScheduledNotification_Trigger `protobuf_oneof:"trigger"`
}

func (x *ScheduledNotification) Reset() {
	*x = ScheduledNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_v1alpha1_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduledNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduledNotification) ProtoMessage() {}

func (x *ScheduledNotification) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_v1alpha1_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduledNotification.ProtoReflect.Descriptor instead.
func (*ScheduledNotification) Descriptor() ([]byte, []int) {
	return file_notifications_v1alpha1_api_proto_rawDescGZIP(), []int{0}
}

func (x *ScheduledNotification) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ScheduledNotification) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ScheduledNotification) GetNotification() *NotificationEvent {
	if x != nil {
		return x.Notification
	}
	return nil
}

func (x *ScheduledNotification) GetExpireAfter() int64 {
	if x != nil {
		return x.ExpireAfter
	}
	return 0
}

func (m *ScheduledNotification) GetTrigger() isScheduledNotification_Trigger {
	if m != nil {
		return m.Trigger
	}
	return nil
}

func (x *ScheduledNotification) GetExecuteOnceTrigger() *ExecuteOnceTrigger {
	if x, ok := x.GetTrigger().(*ScheduledNotification_ExecuteOnceTrigger); ok {
		return x.ExecuteOnceTrigger
	}
	return nil
}

func (x *ScheduledNotification) GetCronTrigger() *CronTrigger {
	if x, ok := x.GetTrigger().(*ScheduledNotification_CronTrigger); ok {
		return x.CronTrigger
	}
	return nil
}

type isScheduledNotification_Trigger interface {
	isScheduledNotification_Trigger()
}

type ScheduledNotification_ExecuteOnceTrigger struct {
	ExecuteOnceTrigger *ExecuteOnceTrigger `protobuf:"bytes,5,opt,name=execute_once_trigger,json=executeOnceTrigger,proto3,oneof"`
}

type ScheduledNotification_CronTrigger struct {
	CronTrigger *CronTrigger `protobuf:"bytes,6,opt,name=cron_trigger,json=cronTrigger,proto3,oneof"`
}

func (*ScheduledNotification_ExecuteOnceTrigger) isScheduledNotification_Trigger() {}

func (*ScheduledNotification_CronTrigger) isScheduledNotification_Trigger() {}

type NotificationUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EmailAddress     string `protobuf:"bytes,2,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"`
	LastNotification string `protobuf:"bytes,5,opt,name=last_notification,json=lastNotification,proto3" json:"last_notification,omitempty"`
}

func (x *NotificationUser) Reset() {
	*x = NotificationUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_v1alpha1_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationUser) ProtoMessage() {}

func (x *NotificationUser) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_v1alpha1_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationUser.ProtoReflect.Descriptor instead.
func (*NotificationUser) Descriptor() ([]byte, []int) {
	return file_notifications_v1alpha1_api_proto_rawDescGZIP(), []int{1}
}

func (x *NotificationUser) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NotificationUser) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

func (x *NotificationUser) GetLastNotification() string {
	if x != nil {
		return x.LastNotification
	}
	return ""
}

type SubscriptionSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicPrefix   string           `protobuf:"bytes,1,opt,name=topic_prefix,json=topicPrefix,proto3" json:"topic_prefix,omitempty"`
	TopicSettings *structpb.Struct `protobuf:"bytes,2,opt,name=topic_settings,json=topicSettings,proto3" json:"topic_settings,omitempty"`
}

func (x *SubscriptionSettings) Reset() {
	*x = SubscriptionSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_v1alpha1_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriptionSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionSettings) ProtoMessage() {}

func (x *SubscriptionSettings) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_v1alpha1_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionSettings.ProtoReflect.Descriptor instead.
func (*SubscriptionSettings) Descriptor() ([]byte, []int) {
	return file_notifications_v1alpha1_api_proto_rawDescGZIP(), []int{2}
}

func (x *SubscriptionSettings) GetTopicPrefix() string {
	if x != nil {
		return x.TopicPrefix
	}
	return ""
}

func (x *SubscriptionSettings) GetTopicSettings() *structpb.Struct {
	if x != nil {
		return x.TopicSettings
	}
	return nil
}

type Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Subject           string                   `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	Silent            bool                     `protobuf:"varint,3,opt,name=silent,proto3" json:"silent,omitempty"`
	Created           string                   `protobuf:"bytes,4,opt,name=created,proto3" json:"created,omitempty"`
	Updated           string                   `protobuf:"bytes,5,opt,name=updated,proto3" json:"updated,omitempty"`
	TrackingToken     string                   `protobuf:"bytes,6,opt,name=tracking_token,json=trackingToken,proto3" json:"tracking_token,omitempty"`
	Body              string                   `protobuf:"bytes,7,opt,name=body,proto3" json:"body,omitempty"`
	ImageSmall        string                   `protobuf:"bytes,8,opt,name=image_small,json=imageSmall,proto3" json:"image_small,omitempty"`
	ImageLarge        string                   `protobuf:"bytes,9,opt,name=image_large,json=imageLarge,proto3" json:"image_large,omitempty"`
	TrackSeenUrl      string                   `protobuf:"bytes,10,opt,name=track_seen_url,json=trackSeenUrl,proto3" json:"track_seen_url,omitempty"`
	TrackDeliveredUrl string                   `protobuf:"bytes,11,opt,name=track_delivered_url,json=trackDeliveredUrl,proto3" json:"track_delivered_url,omitempty"`
	LinkUrl           string                   `protobuf:"bytes,12,opt,name=link_url,json=linkUrl,proto3" json:"link_url,omitempty"`
	LinkText          string                   `protobuf:"bytes,13,opt,name=link_text,json=linkText,proto3" json:"link_text,omitempty"`
	ConfirmText       string                   `protobuf:"bytes,14,opt,name=confirm_text,json=confirmText,proto3" json:"confirm_text,omitempty"`
	ConfirmUrl        string                   `protobuf:"bytes,15,opt,name=confirm_url,json=confirmUrl,proto3" json:"confirm_url,omitempty"`
	Data              string                   `protobuf:"bytes,16,opt,name=data,proto3" json:"data,omitempty"`
	Properties        *structpb.Struct         `protobuf:"bytes,17,opt,name=properties,proto3" json:"properties,omitempty"`
	Channels          *structpb.Struct         `protobuf:"bytes,18,opt,name=channels,proto3" json:"channels,omitempty"`
	FirstDelivered    *NotificationHandledInfo `protobuf:"bytes,19,opt,name=first_delivered,json=firstDelivered,proto3" json:"first_delivered,omitempty"`
	FirstSeen         *NotificationHandledInfo `protobuf:"bytes,20,opt,name=first_seen,json=firstSeen,proto3" json:"first_seen,omitempty"`
	FirstConfirmed    *NotificationHandledInfo `protobuf:"bytes,21,opt,name=first_confirmed,json=firstConfirmed,proto3" json:"first_confirmed,omitempty"`
}

func (x *Notification) Reset() {
	*x = Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_v1alpha1_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_v1alpha1_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_notifications_v1alpha1_api_proto_rawDescGZIP(), []int{3}
}

func (x *Notification) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Notification) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *Notification) GetSilent() bool {
	if x != nil {
		return x.Silent
	}
	return false
}

func (x *Notification) GetCreated() string {
	if x != nil {
		return x.Created
	}
	return ""
}

func (x *Notification) GetUpdated() string {
	if x != nil {
		return x.Updated
	}
	return ""
}

func (x *Notification) GetTrackingToken() string {
	if x != nil {
		return x.TrackingToken
	}
	return ""
}

func (x *Notification) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *Notification) GetImageSmall() string {
	if x != nil {
		return x.ImageSmall
	}
	return ""
}

func (x *Notification) GetImageLarge() string {
	if x != nil {
		return x.ImageLarge
	}
	return ""
}

func (x *Notification) GetTrackSeenUrl() string {
	if x != nil {
		return x.TrackSeenUrl
	}
	return ""
}

func (x *Notification) GetTrackDeliveredUrl() string {
	if x != nil {
		return x.TrackDeliveredUrl
	}
	return ""
}

func (x *Notification) GetLinkUrl() string {
	if x != nil {
		return x.LinkUrl
	}
	return ""
}

func (x *Notification) GetLinkText() string {
	if x != nil {
		return x.LinkText
	}
	return ""
}

func (x *Notification) GetConfirmText() string {
	if x != nil {
		return x.ConfirmText
	}
	return ""
}

func (x *Notification) GetConfirmUrl() string {
	if x != nil {
		return x.ConfirmUrl
	}
	return ""
}

func (x *Notification) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *Notification) GetProperties() *structpb.Struct {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *Notification) GetChannels() *structpb.Struct {
	if x != nil {
		return x.Channels
	}
	return nil
}

func (x *Notification) GetFirstDelivered() *NotificationHandledInfo {
	if x != nil {
		return x.FirstDelivered
	}
	return nil
}

func (x *Notification) GetFirstSeen() *NotificationHandledInfo {
	if x != nil {
		return x.FirstSeen
	}
	return nil
}

func (x *Notification) GetFirstConfirmed() *NotificationHandledInfo {
	if x != nil {
		return x.FirstConfirmed
	}
	return nil
}

type NotificationHandledInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp string `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Channel   string `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
}

func (x *NotificationHandledInfo) Reset() {
	*x = NotificationHandledInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_v1alpha1_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationHandledInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationHandledInfo) ProtoMessage() {}

func (x *NotificationHandledInfo) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_v1alpha1_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationHandledInfo.ProtoReflect.Descriptor instead.
func (*NotificationHandledInfo) Descriptor() ([]byte, []int) {
	return file_notifications_v1alpha1_api_proto_rawDescGZIP(), []int{4}
}

func (x *NotificationHandledInfo) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *NotificationHandledInfo) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

type NotificationEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic               string                       `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	CreatorId           string                       `protobuf:"bytes,2,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	TemplateCode        string                       `protobuf:"bytes,3,opt,name=template_code,json=templateCode,proto3" json:"template_code,omitempty"`
	TemplateVariants    *structpb.Struct             `protobuf:"bytes,4,opt,name=template_variants,json=templateVariants,proto3" json:"template_variants,omitempty"`
	Data                string                       `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	Timestamp           string                       `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Preformatted        *NotificationEventFormatting `protobuf:"bytes,7,opt,name=preformatted,proto3" json:"preformatted,omitempty"`
	Settings            *structpb.Struct             `protobuf:"bytes,8,opt,name=settings,proto3" json:"settings,omitempty"`
	Properties          *structpb.Struct             `protobuf:"bytes,9,opt,name=properties,proto3" json:"properties,omitempty"`
	Scheduling          *NotificationEventScheduling `protobuf:"bytes,10,opt,name=scheduling,proto3" json:"scheduling,omitempty"`
	Silent              bool                         `protobuf:"varint,11,opt,name=silent,proto3" json:"silent,omitempty"`
	Test                bool                         `protobuf:"varint,12,opt,name=test,proto3" json:"test,omitempty"`
	TimeToLiveInSeconds int32                        `protobuf:"varint,13,opt,name=time_to_live_in_seconds,json=timeToLiveInSeconds,proto3" json:"time_to_live_in_seconds,omitempty"`
}

func (x *NotificationEvent) Reset() {
	*x = NotificationEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_v1alpha1_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationEvent) ProtoMessage() {}

func (x *NotificationEvent) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_v1alpha1_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationEvent.ProtoReflect.Descriptor instead.
func (*NotificationEvent) Descriptor() ([]byte, []int) {
	return file_notifications_v1alpha1_api_proto_rawDescGZIP(), []int{5}
}

func (x *NotificationEvent) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *NotificationEvent) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

func (x *NotificationEvent) GetTemplateCode() string {
	if x != nil {
		return x.TemplateCode
	}
	return ""
}

func (x *NotificationEvent) GetTemplateVariants() *structpb.Struct {
	if x != nil {
		return x.TemplateVariants
	}
	return nil
}

func (x *NotificationEvent) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *NotificationEvent) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *NotificationEvent) GetPreformatted() *NotificationEventFormatting {
	if x != nil {
		return x.Preformatted
	}
	return nil
}

func (x *NotificationEvent) GetSettings() *structpb.Struct {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *NotificationEvent) GetProperties() *structpb.Struct {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *NotificationEvent) GetScheduling() *NotificationEventScheduling {
	if x != nil {
		return x.Scheduling
	}
	return nil
}

func (x *NotificationEvent) GetSilent() bool {
	if x != nil {
		return x.Silent
	}
	return false
}

func (x *NotificationEvent) GetTest() bool {
	if x != nil {
		return x.Test
	}
	return false
}

func (x *NotificationEvent) GetTimeToLiveInSeconds() int32 {
	if x != nil {
		return x.TimeToLiveInSeconds
	}
	return 0
}

type NotificationEventFormatting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject     *structpb.Struct `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	Body        *structpb.Struct `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	ConfirmText *structpb.Struct `protobuf:"bytes,3,opt,name=confirm_text,json=confirmText,proto3" json:"confirm_text,omitempty"`
	ImageSmall  *structpb.Struct `protobuf:"bytes,4,opt,name=image_small,json=imageSmall,proto3" json:"image_small,omitempty"`
	ImageLarge  *structpb.Struct `protobuf:"bytes,5,opt,name=image_large,json=imageLarge,proto3" json:"image_large,omitempty"`
	LinkUrl     *structpb.Struct `protobuf:"bytes,6,opt,name=link_url,json=linkUrl,proto3" json:"link_url,omitempty"`
	LinkText    *structpb.Struct `protobuf:"bytes,7,opt,name=link_text,json=linkText,proto3" json:"link_text,omitempty"`
	ConfirmMode string           `protobuf:"bytes,8,opt,name=confirm_mode,json=confirmMode,proto3" json:"confirm_mode,omitempty"`
}

func (x *NotificationEventFormatting) Reset() {
	*x = NotificationEventFormatting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_v1alpha1_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationEventFormatting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationEventFormatting) ProtoMessage() {}

func (x *NotificationEventFormatting) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_v1alpha1_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationEventFormatting.ProtoReflect.Descriptor instead.
func (*NotificationEventFormatting) Descriptor() ([]byte, []int) {
	return file_notifications_v1alpha1_api_proto_rawDescGZIP(), []int{6}
}

func (x *NotificationEventFormatting) GetSubject() *structpb.Struct {
	if x != nil {
		return x.Subject
	}
	return nil
}

func (x *NotificationEventFormatting) GetBody() *structpb.Struct {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *NotificationEventFormatting) GetConfirmText() *structpb.Struct {
	if x != nil {
		return x.ConfirmText
	}
	return nil
}

func (x *NotificationEventFormatting) GetImageSmall() *structpb.Struct {
	if x != nil {
		return x.ImageSmall
	}
	return nil
}

func (x *NotificationEventFormatting) GetImageLarge() *structpb.Struct {
	if x != nil {
		return x.ImageLarge
	}
	return nil
}

func (x *NotificationEventFormatting) GetLinkUrl() *structpb.Struct {
	if x != nil {
		return x.LinkUrl
	}
	return nil
}

func (x *NotificationEventFormatting) GetLinkText() *structpb.Struct {
	if x != nil {
		return x.LinkText
	}
	return nil
}

func (x *NotificationEventFormatting) GetConfirmMode() string {
	if x != nil {
		return x.ConfirmMode
	}
	return ""
}

type NotificationEventScheduling struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	NextWeekDay string `protobuf:"bytes,2,opt,name=next_week_day,json=nextWeekDay,proto3" json:"next_week_day,omitempty"`
	Date        string `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	Time        string `protobuf:"bytes,4,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *NotificationEventScheduling) Reset() {
	*x = NotificationEventScheduling{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_v1alpha1_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationEventScheduling) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationEventScheduling) ProtoMessage() {}

func (x *NotificationEventScheduling) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_v1alpha1_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationEventScheduling.ProtoReflect.Descriptor instead.
func (*NotificationEventScheduling) Descriptor() ([]byte, []int) {
	return file_notifications_v1alpha1_api_proto_rawDescGZIP(), []int{7}
}

func (x *NotificationEventScheduling) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *NotificationEventScheduling) GetNextWeekDay() string {
	if x != nil {
		return x.NextWeekDay
	}
	return ""
}

func (x *NotificationEventScheduling) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *NotificationEventScheduling) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type ExecuteOnceTrigger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FireAt string `protobuf:"bytes,1,opt,name=fire_at,json=fireAt,proto3" json:"fire_at,omitempty"`
}

func (x *ExecuteOnceTrigger) Reset() {
	*x = ExecuteOnceTrigger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_v1alpha1_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteOnceTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteOnceTrigger) ProtoMessage() {}

func (x *ExecuteOnceTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_v1alpha1_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteOnceTrigger.ProtoReflect.Descriptor instead.
func (*ExecuteOnceTrigger) Descriptor() ([]byte, []int) {
	return file_notifications_v1alpha1_api_proto_rawDescGZIP(), []int{8}
}

func (x *ExecuteOnceTrigger) GetFireAt() string {
	if x != nil {
		return x.FireAt
	}
	return ""
}

type CronTrigger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Expression string `protobuf:"bytes,1,opt,name=expression,proto3" json:"expression,omitempty"`
}

func (x *CronTrigger) Reset() {
	*x = CronTrigger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_v1alpha1_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CronTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CronTrigger) ProtoMessage() {}

func (x *CronTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_v1alpha1_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CronTrigger.ProtoReflect.Descriptor instead.
func (*CronTrigger) Descriptor() ([]byte, []int) {
	return file_notifications_v1alpha1_api_proto_rawDescGZIP(), []int{9}
}

func (x *CronTrigger) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

type NotificationsServiceUpsertUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*NotificationUser `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *NotificationsServiceUpsertUsersRequest) Reset() {
	*x = NotificationsServiceUpsertUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_v1alpha1_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationsServiceUpsertUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationsServiceUpsertUsersRequest) ProtoMessage() {}

func (x *NotificationsServiceUpsertUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_v1alpha1_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationsServiceUpsertUsersRequest.ProtoReflect.Descriptor instead.
func (*NotificationsServiceUpsertUsersRequest) Descriptor() ([]byte, []int) {
	return file_notifications_v1alpha1_api_proto_rawDescGZIP(), []int{10}
}

func (x *NotificationsServiceUpsertUsersRequest) GetUsers() []*NotificationUser {
	if x != nil {
		return x.Users
	}
	return nil
}

type NotificationsServiceUpsertUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*NotificationUser `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *NotificationsServiceUpsertUsersResponse) Reset() {
	*x = NotificationsServiceUpsertUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_v1alpha1_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationsServiceUpsertUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationsServiceUpsertUsersResponse) ProtoMessage() {}

func (x *NotificationsServiceUpsertUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_v1alpha1_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationsServiceUpsertUsersResponse.ProtoReflect.Descriptor instead.
func (*NotificationsServiceUpsertUsersResponse) Descriptor() ([]byte, []int) {
	return file_notifications_v1alpha1_api_proto_rawDescGZIP(), []int{11}
}

func (x *NotificationsServiceUpsertUsersResponse) GetUsers() []*NotificationUser {
	if x != nil {
		return x.Users
	}
	return nil
}

type NotificationsServiceGetUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *NotificationsServiceGetUsersRequest) Reset() {
	*x = NotificationsServiceGetUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_v1alpha1_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationsServiceGetUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationsServiceGetUsersRequest) ProtoMessage() {}

func (x *NotificationsServiceGetUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_v1alpha1_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationsServiceGetUsersRequest.ProtoReflect.Descriptor instead.
func (*NotificationsServiceGetUsersRequest) Descriptor() ([]byte, []int) {
	return file_notifications_v1alpha1_api_proto_rawDescGZIP(), []int{12}
}

func (x *NotificationsServiceGetUsersRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type NotificationsServiceGetUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*NotificationUser `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *NotificationsServiceGetUsersResponse) Reset() {
	*x = NotificationsServiceGetUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_v1alpha1_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationsServiceGetUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationsServiceGetUsersResponse) ProtoMessage() {}

func (x *NotificationsServiceGetUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_v1alpha1_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationsServiceGetUsersResponse.ProtoReflect.Descriptor instead.
func (*NotificationsServiceGetUsersResponse) Descriptor() ([]byte, []int) {
	return file_notifications_v1alpha1_api_proto_rawDescGZIP(), []int{13}
}

func (x *NotificationsServiceGetUsersResponse) GetUsers() []*NotificationUser {
	if x != nil {
		return x.Users
	}
	return nil
}

type NotificationsServiceListUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Skip  int32 `protobuf:"varint,2,opt,name=skip,proto3" json:"skip,omitempty"`
}

func (x *NotificationsServiceListUsersRequest) Reset() {
	*x = NotificationsServiceListUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_v1alpha1_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationsServiceListUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationsServiceListUsersRequest) ProtoMessage() {}

func (x *NotificationsServiceListUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_v1alpha1_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationsServiceListUsersRequest.ProtoReflect.Descriptor instead.
func (*NotificationsServiceListUsersRequest) Descriptor() ([]byte, []int) {
	return file_notifications_v1alpha1_api_proto_rawDescGZIP(), []int{14}
}

func (x *NotificationsServiceListUsersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *NotificationsServiceListUsersRequest) GetSkip() int32 {
	if x != nil {
		return x.Skip
	}
	return 0
}

type NotificationsServiceListUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*NotificationUser `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *NotificationsServiceListUsersResponse) Reset() {
	*x = NotificationsServiceListUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_v1alpha1_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationsServiceListUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationsServiceListUsersResponse) ProtoMessage() {}

func (x *NotificationsServiceListUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_v1alpha1_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationsServiceListUsersResponse.ProtoReflect.Descriptor instead.
func (*NotificationsServiceListUsersResponse) Descriptor() ([]byte, []int) {
	return file_notifications_v1alpha1_api_proto_rawDescGZIP(), []int{15}
}

func (x *NotificationsServiceListUsersResponse) GetUsers() []*NotificationUser {
	if x != nil {
		return x.Users
	}
	return nil
}

type NotificationsServiceDeleteUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *NotificationsServiceDeleteUsersRequest) Reset() {
	*x = NotificationsServiceDeleteUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_v1alpha1_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationsServiceDeleteUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationsServiceDeleteUsersRequest) ProtoMessage() {}

func (x *NotificationsServiceDeleteUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_v1alpha1_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationsServiceDeleteUsersRequest.ProtoReflect.Descriptor instead.
func (*NotificationsServiceDeleteUsersRequest) Descriptor() ([]byte, []int) {
	return file_notifications_v1alpha1_api_proto_rawDescGZIP(), []int{16}
}

func (x *NotificationsServiceDeleteUsersRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type NotificationsServiceDeleteUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *NotificationsServiceDeleteUsersResponse) Reset() {
	*x = NotificationsServiceDeleteUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_v1alpha1_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationsServiceDeleteUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationsServiceDeleteUsersResponse) ProtoMessage() {}

func (x *NotificationsServiceDeleteUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_v1alpha1_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationsServiceDeleteUsersResponse.ProtoReflect.Descriptor instead.
func (*NotificationsServiceDeleteUsersResponse) Descriptor() ([]byte, []int) {
	return file_notifications_v1alpha1_api_proto_rawDescGZIP(), []int{17}
}

func (x *NotificationsServiceDeleteUsersResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type NotificationsServiceGetNotificationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Channels []string `protobuf:"bytes,2,rep,name=channels,proto3" json:"channels,omitempty"`
	Query    string   `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	Limit    int32    `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Skip     int32    `protobuf:"varint,5,opt,name=skip,proto3" json:"skip,omitempty"`
}

func (x *NotificationsServiceGetNotificationsRequest) Reset() {
	*x = NotificationsServiceGetNotificationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_v1alpha1_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationsServiceGetNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationsServiceGetNotificationsRequest) ProtoMessage() {}

func (x *NotificationsServiceGetNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_v1alpha1_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationsServiceGetNotificationsRequest.ProtoReflect.Descriptor instead.
func (*NotificationsServiceGetNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_notifications_v1alpha1_api_proto_rawDescGZIP(), []int{18}
}

func (x *NotificationsServiceGetNotificationsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *NotificationsServiceGetNotificationsRequest) GetChannels() []string {
	if x != nil {
		return x.Channels
	}
	return nil
}

func (x *NotificationsServiceGetNotificationsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *NotificationsServiceGetNotificationsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *NotificationsServiceGetNotificationsRequest) GetSkip() int32 {
	if x != nil {
		return x.Skip
	}
	return 0
}

type NotificationsServiceGetNotificationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total         int32           `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Notifications []*Notification `protobuf:"bytes,2,rep,name=notifications,proto3" json:"notifications,omitempty"`
}

func (x *NotificationsServiceGetNotificationsResponse) Reset() {
	*x = NotificationsServiceGetNotificationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_v1alpha1_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationsServiceGetNotificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationsServiceGetNotificationsResponse) ProtoMessage() {}

func (x *NotificationsServiceGetNotificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_v1alpha1_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationsServiceGetNotificationsResponse.ProtoReflect.Descriptor instead.
func (*NotificationsServiceGetNotificationsResponse) Descriptor() ([]byte, []int) {
	return file_notifications_v1alpha1_api_proto_rawDescGZIP(), []int{19}
}

func (x *NotificationsServiceGetNotificationsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *NotificationsServiceGetNotificationsResponse) GetNotifications() []*Notification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

type NotificationsServiceSendNotificationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notifications []*NotificationEvent `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"`
}

func (x *NotificationsServiceSendNotificationsRequest) Reset() {
	*x = NotificationsServiceSendNotificationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_v1alpha1_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationsServiceSendNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationsServiceSendNotificationsRequest) ProtoMessage() {}

func (x *NotificationsServiceSendNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_v1alpha1_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationsServiceSendNotificationsRequest.ProtoReflect.Descriptor instead.
func (*NotificationsServiceSendNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_notifications_v1alpha1_api_proto_rawDescGZIP(), []int{20}
}

func (x *NotificationsServiceSendNotificationsRequest) GetNotifications() []*NotificationEvent {
	if x != nil {
		return x.Notifications
	}
	return nil
}

type NotificationsServiceSendNotificationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *NotificationsServiceSendNotificationsResponse) Reset() {
	*x = NotificationsServiceSendNotificationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_v1alpha1_api_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationsServiceSendNotificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationsServiceSendNotificationsResponse) ProtoMessage() {}

func (x *NotificationsServiceSendNotificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_v1alpha1_api_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationsServiceSendNotificationsResponse.ProtoReflect.Descriptor instead.
func (*NotificationsServiceSendNotificationsResponse) Descriptor() ([]byte, []int) {
	return file_notifications_v1alpha1_api_proto_rawDescGZIP(), []int{21}
}

func (x *NotificationsServiceSendNotificationsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type NotificationsServiceUpdateSubscriptionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string                  `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Subscribe   []*SubscriptionSettings `protobuf:"bytes,2,rep,name=subscribe,proto3" json:"subscribe,omitempty"`
	Unsubscribe []string                `protobuf:"bytes,3,rep,name=unsubscribe,proto3" json:"unsubscribe,omitempty"`
}

func (x *NotificationsServiceUpdateSubscriptionsRequest) Reset() {
	*x = NotificationsServiceUpdateSubscriptionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_v1alpha1_api_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationsServiceUpdateSubscriptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationsServiceUpdateSubscriptionsRequest) ProtoMessage() {}

func (x *NotificationsServiceUpdateSubscriptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_v1alpha1_api_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationsServiceUpdateSubscriptionsRequest.ProtoReflect.Descriptor instead.
func (*NotificationsServiceUpdateSubscriptionsRequest) Descriptor() ([]byte, []int) {
	return file_notifications_v1alpha1_api_proto_rawDescGZIP(), []int{22}
}

func (x *NotificationsServiceUpdateSubscriptionsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *NotificationsServiceUpdateSubscriptionsRequest) GetSubscribe() []*SubscriptionSettings {
	if x != nil {
		return x.Subscribe
	}
	return nil
}

func (x *NotificationsServiceUpdateSubscriptionsRequest) GetUnsubscribe() []string {
	if x != nil {
		return x.Unsubscribe
	}
	return nil
}

type NotificationsServiceUpdateSubscriptionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *NotificationsServiceUpdateSubscriptionsResponse) Reset() {
	*x = NotificationsServiceUpdateSubscriptionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_v1alpha1_api_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationsServiceUpdateSubscriptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationsServiceUpdateSubscriptionsResponse) ProtoMessage() {}

func (x *NotificationsServiceUpdateSubscriptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_v1alpha1_api_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationsServiceUpdateSubscriptionsResponse.ProtoReflect.Descriptor instead.
func (*NotificationsServiceUpdateSubscriptionsResponse) Descriptor() ([]byte, []int) {
	return file_notifications_v1alpha1_api_proto_rawDescGZIP(), []int{23}
}

func (x *NotificationsServiceUpdateSubscriptionsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type NotificationsServiceUpsertScheduledNotificationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notifications []*ScheduledNotification `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"`
}

func (x *NotificationsServiceUpsertScheduledNotificationsRequest) Reset() {
	*x = NotificationsServiceUpsertScheduledNotificationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_v1alpha1_api_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationsServiceUpsertScheduledNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationsServiceUpsertScheduledNotificationsRequest) ProtoMessage() {}

func (x *NotificationsServiceUpsertScheduledNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_v1alpha1_api_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationsServiceUpsertScheduledNotificationsRequest.ProtoReflect.Descriptor instead.
func (*NotificationsServiceUpsertScheduledNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_notifications_v1alpha1_api_proto_rawDescGZIP(), []int{24}
}

func (x *NotificationsServiceUpsertScheduledNotificationsRequest) GetNotifications() []*ScheduledNotification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

type NotificationsServiceUpsertScheduledNotificationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success       bool                     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Notifications []*ScheduledNotification `protobuf:"bytes,2,rep,name=notifications,proto3" json:"notifications,omitempty"`
}

func (x *NotificationsServiceUpsertScheduledNotificationsResponse) Reset() {
	*x = NotificationsServiceUpsertScheduledNotificationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_v1alpha1_api_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationsServiceUpsertScheduledNotificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationsServiceUpsertScheduledNotificationsResponse) ProtoMessage() {}

func (x *NotificationsServiceUpsertScheduledNotificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_v1alpha1_api_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationsServiceUpsertScheduledNotificationsResponse.ProtoReflect.Descriptor instead.
func (*NotificationsServiceUpsertScheduledNotificationsResponse) Descriptor() ([]byte, []int) {
	return file_notifications_v1alpha1_api_proto_rawDescGZIP(), []int{25}
}

func (x *NotificationsServiceUpsertScheduledNotificationsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *NotificationsServiceUpsertScheduledNotificationsResponse) GetNotifications() []*ScheduledNotification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

type NotificationsServiceGetScheduledNotificationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids    []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	UserId string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Limit  int32    `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Skip   int32    `protobuf:"varint,4,opt,name=skip,proto3" json:"skip,omitempty"`
}

func (x *NotificationsServiceGetScheduledNotificationsRequest) Reset() {
	*x = NotificationsServiceGetScheduledNotificationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_v1alpha1_api_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationsServiceGetScheduledNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationsServiceGetScheduledNotificationsRequest) ProtoMessage() {}

func (x *NotificationsServiceGetScheduledNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_v1alpha1_api_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationsServiceGetScheduledNotificationsRequest.ProtoReflect.Descriptor instead.
func (*NotificationsServiceGetScheduledNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_notifications_v1alpha1_api_proto_rawDescGZIP(), []int{26}
}

func (x *NotificationsServiceGetScheduledNotificationsRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *NotificationsServiceGetScheduledNotificationsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *NotificationsServiceGetScheduledNotificationsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *NotificationsServiceGetScheduledNotificationsRequest) GetSkip() int32 {
	if x != nil {
		return x.Skip
	}
	return 0
}

type NotificationsServiceGetScheduledNotificationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScheduledNotifications []*ScheduledNotification `protobuf:"bytes,1,rep,name=scheduled_notifications,json=scheduledNotifications,proto3" json:"scheduled_notifications,omitempty"`
}

func (x *NotificationsServiceGetScheduledNotificationsResponse) Reset() {
	*x = NotificationsServiceGetScheduledNotificationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_v1alpha1_api_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationsServiceGetScheduledNotificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationsServiceGetScheduledNotificationsResponse) ProtoMessage() {}

func (x *NotificationsServiceGetScheduledNotificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_v1alpha1_api_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationsServiceGetScheduledNotificationsResponse.ProtoReflect.Descriptor instead.
func (*NotificationsServiceGetScheduledNotificationsResponse) Descriptor() ([]byte, []int) {
	return file_notifications_v1alpha1_api_proto_rawDescGZIP(), []int{27}
}

func (x *NotificationsServiceGetScheduledNotificationsResponse) GetScheduledNotifications() []*ScheduledNotification {
	if x != nil {
		return x.ScheduledNotifications
	}
	return nil
}

type NotificationsServiceDeleteScheduledNotificationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *NotificationsServiceDeleteScheduledNotificationsRequest) Reset() {
	*x = NotificationsServiceDeleteScheduledNotificationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_v1alpha1_api_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationsServiceDeleteScheduledNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationsServiceDeleteScheduledNotificationsRequest) ProtoMessage() {}

func (x *NotificationsServiceDeleteScheduledNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_v1alpha1_api_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationsServiceDeleteScheduledNotificationsRequest.ProtoReflect.Descriptor instead.
func (*NotificationsServiceDeleteScheduledNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_notifications_v1alpha1_api_proto_rawDescGZIP(), []int{28}
}

func (x *NotificationsServiceDeleteScheduledNotificationsRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type NotificationsServiceDeleteScheduledNotificationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *NotificationsServiceDeleteScheduledNotificationsResponse) Reset() {
	*x = NotificationsServiceDeleteScheduledNotificationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_v1alpha1_api_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationsServiceDeleteScheduledNotificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationsServiceDeleteScheduledNotificationsResponse) ProtoMessage() {}

func (x *NotificationsServiceDeleteScheduledNotificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_v1alpha1_api_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationsServiceDeleteScheduledNotificationsResponse.ProtoReflect.Descriptor instead.
func (*NotificationsServiceDeleteScheduledNotificationsResponse) Descriptor() ([]byte, []int) {
	return file_notifications_v1alpha1_api_proto_rawDescGZIP(), []int{29}
}

func (x *NotificationsServiceDeleteScheduledNotificationsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_notifications_v1alpha1_api_proto protoreflect.FileDescriptor

var file_notifications_v1alpha1_api_proto_rawDesc = []byte{
	0x0a, 0x20, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x16, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe7, 0x02, 0x0a, 0x15, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x4d, 0x0a, 0x0c, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x5e, 0x0a, 0x14, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x5f, 0x6f, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x4f, 0x6e, 0x63, 0x65, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x48, 0x00, 0x52, 0x12, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65,
	0x4f, 0x6e, 0x63, 0x65, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x48, 0x0a, 0x0c, 0x63,
	0x72, 0x6f, 0x6e, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x6f, 0x6e, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x72, 0x6f, 0x6e, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x22, 0x74, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x79, 0x0a, 0x14, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x21,
	0x0a, 0x0c, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x50, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x12, 0x3e, 0x0a, 0x0e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x0d, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x22, 0xd9, 0x06, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x69, 0x6c, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x69,
	0x6c, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x6d, 0x61,
	0x6c, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x53,
	0x6d, 0x61, 0x6c, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x61,
	0x72, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x4c, 0x61, 0x72, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x73,
	0x65, 0x65, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x53, 0x65, 0x65, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x2e, 0x0a, 0x13, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x65, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x6c,
	0x69, 0x6e, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c,
	0x69, 0x6e, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x54,
	0x65, 0x78, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x37, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x58, 0x0a, 0x0f, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x65, 0x64, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x66, 0x69, 0x72, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x65, 0x64, 0x12, 0x4e, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x65,
	0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x53,
	0x65, 0x65, 0x6e, 0x12, 0x58, 0x0a, 0x0f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x22, 0x51, 0x0a,
	0x17, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x22, 0xe3, 0x04, 0x0a, 0x11, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x44, 0x0a, 0x11, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x52, 0x10, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x56, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x57, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65,
	0x64, 0x12, 0x33, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x08, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x37, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12,
	0x53, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x6c, 0x65, 0x6e, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x69, 0x6c, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x65, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x74, 0x65, 0x73, 0x74,
	0x12, 0x34, 0x0a, 0x17, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x6c, 0x69, 0x76, 0x65,
	0x5f, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x13, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x4c, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x53,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0xba, 0x03, 0x0a, 0x1b, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x31, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x3a, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x38, 0x0a, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x6d, 0x61, 0x6c,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x52, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x12, 0x38, 0x0a, 0x0b,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0a, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x34, 0x0a, 0x09, 0x6c, 0x69,
	0x6e, 0x6b, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x4d,
	0x6f, 0x64, 0x65, 0x22, 0x7d, 0x0a, 0x1b, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69,
	0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x77,
	0x65, 0x65, 0x6b, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e,
	0x65, 0x78, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x44, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x22, 0x2d, 0x0a, 0x12, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x4f, 0x6e, 0x63,
	0x65, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x72, 0x65,
	0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x72, 0x65, 0x41,
	0x74, 0x22, 0x2d, 0x0a, 0x0b, 0x43, 0x72, 0x6f, 0x6e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0x68, 0x0a, 0x26, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x05, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x69, 0x0a, 0x27, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x37, 0x0a, 0x23, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x66,
	0x0a, 0x24, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x50, 0x0a, 0x24, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x22, 0x67, 0x0a, 0x25, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3e, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x22, 0x3a, 0x0a, 0x26, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x43, 0x0a,
	0x27, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x22, 0xa2, 0x01, 0x0a, 0x2b, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x22, 0x90, 0x01, 0x0a, 0x2c, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x4a,
	0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x7f, 0x0a, 0x2c, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x0d, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0d, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x49, 0x0a, 0x2d, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xb7, 0x01, 0x0a, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x4a, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x22, 0x4b, 0x0a, 0x2f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x8e, 0x01,
	0x0a, 0x37, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x0d, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xa9,
	0x01, 0x0a, 0x38, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x53, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x8b, 0x01, 0x0a, 0x34, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x22, 0x9f, 0x01, 0x0a, 0x35, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x66, 0x0a, 0x17, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x5f,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x16, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x4b, 0x0a, 0x37, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x54, 0x0a, 0x38, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x32, 0x8b, 0x0f,
	0x0a, 0x14, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xa1, 0x01, 0x0a, 0x0b, 0x55, 0x70, 0x73, 0x65, 0x72,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x3e, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x1a,
	0x09, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x98, 0x01, 0x0a, 0x08, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x3b, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x12, 0x09, 0x2f, 0x76, 0x31, 0x2f,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0xa0, 0x01, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x12, 0x3c, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x3d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0xa1, 0x01, 0x0a, 0x0b, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x3e, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x0b, 0x2a, 0x09, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0xb8, 0x01, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x43, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47,
	0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x44, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0xbb, 0x01, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x44, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x45, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x65, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x13, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0xc1, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x46, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x47, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x1a, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0xe6, 0x01, 0x0a, 0x1c, 0x55, 0x70,
	0x73, 0x65, 0x72, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4f, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x50, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x64, 0x12, 0xdd, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x4c, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65,
	0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4d,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x64, 0x12, 0xe6, 0x01, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x4f, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x50, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x2a, 0x1b,
	0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x42, 0x8b, 0x02, 0x0a, 0x1a,
	0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x42, 0x08, 0x41, 0x70, 0x69, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x6a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x79, 0x73, 0x74, 0x73, 0x71, 0x75, 0x61, 0x64,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2d, 0x67, 0x6f, 0x2d, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x3b, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0xa2, 0x02, 0x03, 0x4e, 0x58, 0x58, 0xaa, 0x02, 0x16, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0xca, 0x02, 0x16, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xe2, 0x02, 0x22, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x17, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3a,
	0x3a, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_notifications_v1alpha1_api_proto_rawDescOnce sync.Once
	file_notifications_v1alpha1_api_proto_rawDescData = file_notifications_v1alpha1_api_proto_rawDesc
)

func file_notifications_v1alpha1_api_proto_rawDescGZIP() []byte {
	file_notifications_v1alpha1_api_proto_rawDescOnce.Do(func() {
		file_notifications_v1alpha1_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_notifications_v1alpha1_api_proto_rawDescData)
	})
	return file_notifications_v1alpha1_api_proto_rawDescData
}

var file_notifications_v1alpha1_api_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_notifications_v1alpha1_api_proto_goTypes = []interface{}{
	(*ScheduledNotification)(nil),                                    // 0: notifications.v1alpha1.ScheduledNotification
	(*NotificationUser)(nil),                                         // 1: notifications.v1alpha1.NotificationUser
	(*SubscriptionSettings)(nil),                                     // 2: notifications.v1alpha1.SubscriptionSettings
	(*Notification)(nil),                                             // 3: notifications.v1alpha1.Notification
	(*NotificationHandledInfo)(nil),                                  // 4: notifications.v1alpha1.NotificationHandledInfo
	(*NotificationEvent)(nil),                                        // 5: notifications.v1alpha1.NotificationEvent
	(*NotificationEventFormatting)(nil),                              // 6: notifications.v1alpha1.NotificationEventFormatting
	(*NotificationEventScheduling)(nil),                              // 7: notifications.v1alpha1.NotificationEventScheduling
	(*ExecuteOnceTrigger)(nil),                                       // 8: notifications.v1alpha1.ExecuteOnceTrigger
	(*CronTrigger)(nil),                                              // 9: notifications.v1alpha1.CronTrigger
	(*NotificationsServiceUpsertUsersRequest)(nil),                   // 10: notifications.v1alpha1.NotificationsServiceUpsertUsersRequest
	(*NotificationsServiceUpsertUsersResponse)(nil),                  // 11: notifications.v1alpha1.NotificationsServiceUpsertUsersResponse
	(*NotificationsServiceGetUsersRequest)(nil),                      // 12: notifications.v1alpha1.NotificationsServiceGetUsersRequest
	(*NotificationsServiceGetUsersResponse)(nil),                     // 13: notifications.v1alpha1.NotificationsServiceGetUsersResponse
	(*NotificationsServiceListUsersRequest)(nil),                     // 14: notifications.v1alpha1.NotificationsServiceListUsersRequest
	(*NotificationsServiceListUsersResponse)(nil),                    // 15: notifications.v1alpha1.NotificationsServiceListUsersResponse
	(*NotificationsServiceDeleteUsersRequest)(nil),                   // 16: notifications.v1alpha1.NotificationsServiceDeleteUsersRequest
	(*NotificationsServiceDeleteUsersResponse)(nil),                  // 17: notifications.v1alpha1.NotificationsServiceDeleteUsersResponse
	(*NotificationsServiceGetNotificationsRequest)(nil),              // 18: notifications.v1alpha1.NotificationsServiceGetNotificationsRequest
	(*NotificationsServiceGetNotificationsResponse)(nil),             // 19: notifications.v1alpha1.NotificationsServiceGetNotificationsResponse
	(*NotificationsServiceSendNotificationsRequest)(nil),             // 20: notifications.v1alpha1.NotificationsServiceSendNotificationsRequest
	(*NotificationsServiceSendNotificationsResponse)(nil),            // 21: notifications.v1alpha1.NotificationsServiceSendNotificationsResponse
	(*NotificationsServiceUpdateSubscriptionsRequest)(nil),           // 22: notifications.v1alpha1.NotificationsServiceUpdateSubscriptionsRequest
	(*NotificationsServiceUpdateSubscriptionsResponse)(nil),          // 23: notifications.v1alpha1.NotificationsServiceUpdateSubscriptionsResponse
	(*NotificationsServiceUpsertScheduledNotificationsRequest)(nil),  // 24: notifications.v1alpha1.NotificationsServiceUpsertScheduledNotificationsRequest
	(*NotificationsServiceUpsertScheduledNotificationsResponse)(nil), // 25: notifications.v1alpha1.NotificationsServiceUpsertScheduledNotificationsResponse
	(*NotificationsServiceGetScheduledNotificationsRequest)(nil),     // 26: notifications.v1alpha1.NotificationsServiceGetScheduledNotificationsRequest
	(*NotificationsServiceGetScheduledNotificationsResponse)(nil),    // 27: notifications.v1alpha1.NotificationsServiceGetScheduledNotificationsResponse
	(*NotificationsServiceDeleteScheduledNotificationsRequest)(nil),  // 28: notifications.v1alpha1.NotificationsServiceDeleteScheduledNotificationsRequest
	(*NotificationsServiceDeleteScheduledNotificationsResponse)(nil), // 29: notifications.v1alpha1.NotificationsServiceDeleteScheduledNotificationsResponse
	(*structpb.Struct)(nil),                                          // 30: google.protobuf.Struct
}
var file_notifications_v1alpha1_api_proto_depIdxs = []int32{
	5,  // 0: notifications.v1alpha1.ScheduledNotification.notification:type_name -> notifications.v1alpha1.NotificationEvent
	8,  // 1: notifications.v1alpha1.ScheduledNotification.execute_once_trigger:type_name -> notifications.v1alpha1.ExecuteOnceTrigger
	9,  // 2: notifications.v1alpha1.ScheduledNotification.cron_trigger:type_name -> notifications.v1alpha1.CronTrigger
	30, // 3: notifications.v1alpha1.SubscriptionSettings.topic_settings:type_name -> google.protobuf.Struct
	30, // 4: notifications.v1alpha1.Notification.properties:type_name -> google.protobuf.Struct
	30, // 5: notifications.v1alpha1.Notification.channels:type_name -> google.protobuf.Struct
	4,  // 6: notifications.v1alpha1.Notification.first_delivered:type_name -> notifications.v1alpha1.NotificationHandledInfo
	4,  // 7: notifications.v1alpha1.Notification.first_seen:type_name -> notifications.v1alpha1.NotificationHandledInfo
	4,  // 8: notifications.v1alpha1.Notification.first_confirmed:type_name -> notifications.v1alpha1.NotificationHandledInfo
	30, // 9: notifications.v1alpha1.NotificationEvent.template_variants:type_name -> google.protobuf.Struct
	6,  // 10: notifications.v1alpha1.NotificationEvent.preformatted:type_name -> notifications.v1alpha1.NotificationEventFormatting
	30, // 11: notifications.v1alpha1.NotificationEvent.settings:type_name -> google.protobuf.Struct
	30, // 12: notifications.v1alpha1.NotificationEvent.properties:type_name -> google.protobuf.Struct
	7,  // 13: notifications.v1alpha1.NotificationEvent.scheduling:type_name -> notifications.v1alpha1.NotificationEventScheduling
	30, // 14: notifications.v1alpha1.NotificationEventFormatting.subject:type_name -> google.protobuf.Struct
	30, // 15: notifications.v1alpha1.NotificationEventFormatting.body:type_name -> google.protobuf.Struct
	30, // 16: notifications.v1alpha1.NotificationEventFormatting.confirm_text:type_name -> google.protobuf.Struct
	30, // 17: notifications.v1alpha1.NotificationEventFormatting.image_small:type_name -> google.protobuf.Struct
	30, // 18: notifications.v1alpha1.NotificationEventFormatting.image_large:type_name -> google.protobuf.Struct
	30, // 19: notifications.v1alpha1.NotificationEventFormatting.link_url:type_name -> google.protobuf.Struct
	30, // 20: notifications.v1alpha1.NotificationEventFormatting.link_text:type_name -> google.protobuf.Struct
	1,  // 21: notifications.v1alpha1.NotificationsServiceUpsertUsersRequest.users:type_name -> notifications.v1alpha1.NotificationUser
	1,  // 22: notifications.v1alpha1.NotificationsServiceUpsertUsersResponse.users:type_name -> notifications.v1alpha1.NotificationUser
	1,  // 23: notifications.v1alpha1.NotificationsServiceGetUsersResponse.users:type_name -> notifications.v1alpha1.NotificationUser
	1,  // 24: notifications.v1alpha1.NotificationsServiceListUsersResponse.users:type_name -> notifications.v1alpha1.NotificationUser
	3,  // 25: notifications.v1alpha1.NotificationsServiceGetNotificationsResponse.notifications:type_name -> notifications.v1alpha1.Notification
	5,  // 26: notifications.v1alpha1.NotificationsServiceSendNotificationsRequest.notifications:type_name -> notifications.v1alpha1.NotificationEvent
	2,  // 27: notifications.v1alpha1.NotificationsServiceUpdateSubscriptionsRequest.subscribe:type_name -> notifications.v1alpha1.SubscriptionSettings
	0,  // 28: notifications.v1alpha1.NotificationsServiceUpsertScheduledNotificationsRequest.notifications:type_name -> notifications.v1alpha1.ScheduledNotification
	0,  // 29: notifications.v1alpha1.NotificationsServiceUpsertScheduledNotificationsResponse.notifications:type_name -> notifications.v1alpha1.ScheduledNotification
	0,  // 30: notifications.v1alpha1.NotificationsServiceGetScheduledNotificationsResponse.scheduled_notifications:type_name -> notifications.v1alpha1.ScheduledNotification
	10, // 31: notifications.v1alpha1.NotificationsService.UpsertUsers:input_type -> notifications.v1alpha1.NotificationsServiceUpsertUsersRequest
	12, // 32: notifications.v1alpha1.NotificationsService.GetUsers:input_type -> notifications.v1alpha1.NotificationsServiceGetUsersRequest
	14, // 33: notifications.v1alpha1.NotificationsService.ListUsers:input_type -> notifications.v1alpha1.NotificationsServiceListUsersRequest
	16, // 34: notifications.v1alpha1.NotificationsService.DeleteUsers:input_type -> notifications.v1alpha1.NotificationsServiceDeleteUsersRequest
	18, // 35: notifications.v1alpha1.NotificationsService.GetNotifications:input_type -> notifications.v1alpha1.NotificationsServiceGetNotificationsRequest
	20, // 36: notifications.v1alpha1.NotificationsService.SendNotifications:input_type -> notifications.v1alpha1.NotificationsServiceSendNotificationsRequest
	22, // 37: notifications.v1alpha1.NotificationsService.UpdateSubscriptions:input_type -> notifications.v1alpha1.NotificationsServiceUpdateSubscriptionsRequest
	24, // 38: notifications.v1alpha1.NotificationsService.UpsertScheduledNotifications:input_type -> notifications.v1alpha1.NotificationsServiceUpsertScheduledNotificationsRequest
	26, // 39: notifications.v1alpha1.NotificationsService.GetScheduledNotifications:input_type -> notifications.v1alpha1.NotificationsServiceGetScheduledNotificationsRequest
	28, // 40: notifications.v1alpha1.NotificationsService.DeleteScheduledNotifications:input_type -> notifications.v1alpha1.NotificationsServiceDeleteScheduledNotificationsRequest
	11, // 41: notifications.v1alpha1.NotificationsService.UpsertUsers:output_type -> notifications.v1alpha1.NotificationsServiceUpsertUsersResponse
	13, // 42: notifications.v1alpha1.NotificationsService.GetUsers:output_type -> notifications.v1alpha1.NotificationsServiceGetUsersResponse
	15, // 43: notifications.v1alpha1.NotificationsService.ListUsers:output_type -> notifications.v1alpha1.NotificationsServiceListUsersResponse
	17, // 44: notifications.v1alpha1.NotificationsService.DeleteUsers:output_type -> notifications.v1alpha1.NotificationsServiceDeleteUsersResponse
	19, // 45: notifications.v1alpha1.NotificationsService.GetNotifications:output_type -> notifications.v1alpha1.NotificationsServiceGetNotificationsResponse
	21, // 46: notifications.v1alpha1.NotificationsService.SendNotifications:output_type -> notifications.v1alpha1.NotificationsServiceSendNotificationsResponse
	23, // 47: notifications.v1alpha1.NotificationsService.UpdateSubscriptions:output_type -> notifications.v1alpha1.NotificationsServiceUpdateSubscriptionsResponse
	25, // 48: notifications.v1alpha1.NotificationsService.UpsertScheduledNotifications:output_type -> notifications.v1alpha1.NotificationsServiceUpsertScheduledNotificationsResponse
	27, // 49: notifications.v1alpha1.NotificationsService.GetScheduledNotifications:output_type -> notifications.v1alpha1.NotificationsServiceGetScheduledNotificationsResponse
	29, // 50: notifications.v1alpha1.NotificationsService.DeleteScheduledNotifications:output_type -> notifications.v1alpha1.NotificationsServiceDeleteScheduledNotificationsResponse
	41, // [41:51] is the sub-list for method output_type
	31, // [31:41] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_notifications_v1alpha1_api_proto_init() }
func file_notifications_v1alpha1_api_proto_init() {
	if File_notifications_v1alpha1_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_notifications_v1alpha1_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduledNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_v1alpha1_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_v1alpha1_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriptionSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_v1alpha1_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_v1alpha1_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationHandledInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_v1alpha1_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_v1alpha1_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationEventFormatting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_v1alpha1_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationEventScheduling); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_v1alpha1_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteOnceTrigger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_v1alpha1_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CronTrigger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_v1alpha1_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationsServiceUpsertUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_v1alpha1_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationsServiceUpsertUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_v1alpha1_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationsServiceGetUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_v1alpha1_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationsServiceGetUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_v1alpha1_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationsServiceListUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_v1alpha1_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationsServiceListUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_v1alpha1_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationsServiceDeleteUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_v1alpha1_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationsServiceDeleteUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_v1alpha1_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationsServiceGetNotificationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_v1alpha1_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationsServiceGetNotificationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_v1alpha1_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationsServiceSendNotificationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_v1alpha1_api_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationsServiceSendNotificationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_v1alpha1_api_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationsServiceUpdateSubscriptionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_v1alpha1_api_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationsServiceUpdateSubscriptionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_v1alpha1_api_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationsServiceUpsertScheduledNotificationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_v1alpha1_api_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationsServiceUpsertScheduledNotificationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_v1alpha1_api_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationsServiceGetScheduledNotificationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_v1alpha1_api_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationsServiceGetScheduledNotificationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_v1alpha1_api_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationsServiceDeleteScheduledNotificationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_v1alpha1_api_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationsServiceDeleteScheduledNotificationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_notifications_v1alpha1_api_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ScheduledNotification_ExecuteOnceTrigger)(nil),
		(*ScheduledNotification_CronTrigger)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_notifications_v1alpha1_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_notifications_v1alpha1_api_proto_goTypes,
		DependencyIndexes: file_notifications_v1alpha1_api_proto_depIdxs,
		MessageInfos:      file_notifications_v1alpha1_api_proto_msgTypes,
	}.Build()
	File_notifications_v1alpha1_api_proto = out.File
	file_notifications_v1alpha1_api_proto_rawDesc = nil
	file_notifications_v1alpha1_api_proto_goTypes = nil
	file_notifications_v1alpha1_api_proto_depIdxs = nil
}
